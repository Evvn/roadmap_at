{"version":3,"sources":["airtable/actions/actionTypes/actionTypes.js","airtable/reducers/airtableReducer.js","rootReducer.js","integration/airtableIntegration.js","integration/rootSaga.js","Store.js","airtable/actions/actions.js","components/Roadmap/Roadmap.jsx","App.js","serviceWorker.js","index.js"],"names":["FETCH_ROADMAP_REQUEST","FETCH_ROADMAP_SUCCESS","FETCH_ROADMAP_FAILURE","initialState","isLoading","roadmap","prioritize","epicA","epicB","priorityA","fields","priority","priorityB","formatRoadmap","roadmapGrouped","data","records","map","record","theme","epics","id","toLowerCase","split","join","push","Object","values","forEach","sort","console","log","airtableReducer","state","action","type","actionTypes","res","error","makeRootReducer","combineReducers","airtable","fetchRoadmap","actionWatcher","axios","get","process","headers","Authorization","then","response","put","takeLatest","rootSaga","all","airtableIntegration","completedColor","saffronBrandColor","RoadmapCont","styled","div","Theme","ThemeTitle","h2","Epic","HoverEpic","HoverEpicTitle","p","HoverEpicField","Roadmap","props","componentDidUpdate","linesDrawn","drawLines","createSVG","svg","document","querySelector","createElementNS","setAttribute","body","scrollWidth","scrollHeight","setAttributeNS","appendChild","drawCurvedLine","x1","y1","x2","y2","color","tension","shape","delta","path","e","drawLine","getBoundingClientRect","epic","i","length","setState","p1","p2","x","width","y","height","addHoverEpic","hoverEpic","removeHoverEpic","drawEpics","status","style","border","key","onMouseEnter","pageX","pageY","onMouseLeave","drawThemes","drawHoverEpic","mouseStyle","left","top","f","propRelease","Date","parse","getDate","getMonth","getFullYear","this","React","Component","AppCont","Title","h1","Generator","button","Loader","App","onClick","roadmapBtnClick","connect","dispatch","bindActionCreators","actions","Boolean","window","location","hostname","match","store","sagaMiddleware","createSagaMiddleware","middleware","enhancers","createStore","compose","applyMiddleware","asyncReducers","run","configureStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c8abf30d.chunk.js","sourcesContent":["export const FETCH_ROADMAP_REQUEST = \"FETCH_ROADMAP_REQUEST\";\nexport const FETCH_ROADMAP_SUCCESS = \"FETCH_ROADMAP_SUCCESS\";\nexport const FETCH_ROADMAP_FAILURE = \"FETCH_ROADMAP_FAILURE\";\n","import * as actionTypes from \"../actions/actionTypes/actionTypes.js\";\n\nconst initialState = {\n  isLoading: false,\n  roadmap: false\n};\n\nconst prioritize = (epicA, epicB) => {\n  const priorityA = epicA.fields.priority;\n  const priorityB = epicB.fields.priority;\n  if (priorityA > priorityB) return 1;\n  if (priorityB > priorityA) return -1;\n  return 0;\n};\n\nconst formatRoadmap = roadmap => {\n  let roadmapGrouped = {};\n\n  roadmap.data.records.map(record => {\n    // if epic doesn't exist in obj yet, create it\n    typeof roadmapGrouped[record.fields.theme] === \"undefined\" &&\n      (roadmapGrouped[record.fields.theme] = {\n        theme: record.fields.theme,\n        epics: [],\n        id: record.fields.theme\n          .toLowerCase()\n          .split(\" \")\n          .join(\"\")\n      });\n\n    return roadmapGrouped[record.fields.theme].epics.push(record);\n  });\n\n  Object.values(roadmapGrouped).forEach(theme => {\n    theme.epics.sort(prioritize);\n  });\n\n  console.log(roadmapGrouped);\n\n  return roadmapGrouped;\n};\n\nfunction airtableReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.FETCH_ROADMAP_REQUEST:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case actionTypes.FETCH_ROADMAP_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        roadmap: formatRoadmap(action.res)\n      };\n    case actionTypes.FETCH_ROADMAP_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        roadmap: action.error\n      };\n    default:\n      return state;\n  }\n}\n\nexport default airtableReducer;\n","import { combineReducers } from \"redux\";\nimport airtableReducer from \"./airtable/reducers/airtableReducer.js\";\n\nexport const makeRootReducer = () =>\n  combineReducers({\n    // Add sync reducers here\n    // router: connectRouter(history),\n    airtable: airtableReducer\n  });\n\nexport default makeRootReducer;\n","import * as actionTypes from \"../airtable/actions/actionTypes/actionTypes.js\";\n// eslint-disable-next-line\nimport { takeLatest, put } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nexport function* fetchRoadmap(action) {\n  try {\n    const res = yield axios\n      .get(\n        `https://api.airtable.com/v0/${process.env.REACT_APP_AIRTABLE_BASE}/${process.env.REACT_APP_ROADMAP_TABLE}`,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${process.env.REACT_APP_AIRTABLE_API_KEY}`\n          }\n        }\n      )\n      .then(response => response);\n    yield put({\n      type: actionTypes.FETCH_ROADMAP_SUCCESS,\n      res\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: actionTypes.FETCH_ROADMAP_FAILURE,\n      error\n    });\n  }\n}\n\nexport function* actionWatcher() {\n  yield takeLatest(actionTypes.FETCH_ROADMAP_REQUEST, fetchRoadmap);\n}\n","import { all } from \"redux-saga/effects\";\n// Saga imports here: (Don't modify this comment, it's used by the code generator)\nimport { actionWatcher as airtableIntegration } from \"./airtableIntegration.js\";\n\nexport default function* rootSaga() {\n  // The next line of code is used by the code generator -\n  // any modifications to it will require changes to the generator.\n  yield all([airtableIntegration()]);\n}\n","// eslint-disable-next-line\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport makeRootReducer from \"./rootReducer\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./integration/rootSaga.js\";\n\nexport default (initialState = {}) => {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const middleware = [sagaMiddleware];\n  const enhancers = [];\n  let store = \"\";\n\n  // for dev - enables redux dev tools in development\n  if (process.env.REACT_APP_REDUX_DEV_TOOLS === \"true\") {\n    store = createStore(\n      makeRootReducer(),\n      initialState,\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        trace: true\n      })(applyMiddleware(...middleware), ...enhancers)\n    );\n  } // for prod\n  else {\n    store = createStore(\n      makeRootReducer(),\n      initialState,\n      compose(\n        applyMiddleware(...middleware),\n        ...enhancers\n      )\n    );\n  }\n\n  store.asyncReducers = {};\n  sagaMiddleware.run(rootSaga);\n\n  window.store = store;\n  return { store };\n};\n","import * as actionTypes from \"./actionTypes/actionTypes.js\";\n\nexport function fetchRoadmap() {\n  return {\n    type: actionTypes.FETCH_ROADMAP_REQUEST\n  };\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst completedColor = \"#008080\";\nconst saffronBrandColor = \"#f05e2f\";\nconst colorAcai = \"#0078a1\";\n\nconst RoadmapCont = styled.div`\n  /* overflow-x: visible; */\n  white-space: nowrap;\n  /* border: 1px dotted #ffc3fc; */\n  margin: 18px;\n`;\n\nconst Theme = styled.div`\n  display: inline-block;\n  vertical-align: top;\n  /* border: 1px dotted #737373; */\n  margin: 8px;\n  max-width: 215px;\n  white-space: pre-wrap;\n`;\n\nconst ThemeTitle = styled.h2`\n  font-family: \"Neue Haas Grotesk Display Pro\", sans-serif;\n  font-weight: 900;\n  font-size: 26px;\n  margin: 0;\n  padding: 10px;\n  border: 1px solid ${completedColor};\n`;\n\nconst Epic = styled.div`\n  font-size: 10px;\n  max-width: 165px;\n  white-space: pre-wrap;\n  color: inherit;\n  padding: 8px;\n  margin: 25px auto;\n`;\n\nconst HoverEpic = styled.div`\n  width: 200px;\n  background-color: #292929;\n  border: 1px dotted ${colorAcai};\n  white-space: pre-wrap;\n  position: absolute;\n  padding: 5px;\n  font-size: 8px;\n`;\n\nconst HoverEpicTitle = styled.p`\n  font-size: 12px;\n`;\n\nconst HoverEpicField = styled.p`\n  font-size: 10px;\n`;\n\nclass Roadmap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverEpic: false,\n      x: false,\n      y: false,\n      linesDrawn: false\n    };\n  }\n\n  componentDidUpdate = () => {\n    const { roadmap } = this.props;\n    const { linesDrawn } = this.state;\n    // draw connecting lines if the epics are drawn in\n    if (linesDrawn === false) {\n      roadmap && this.drawLines();\n    }\n  };\n\n  createSVG = () => {\n    let svg = document.querySelector(\"#svg-canvas\");\n    if (null === svg) {\n      svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n      svg.setAttribute(\"id\", \"svg-canvas\");\n      svg.setAttribute(\n        \"style\",\n        \"position:absolute;top:0px;left:0px;z-index:-10;\"\n      );\n      svg.setAttribute(\"width\", document.body.scrollWidth);\n      svg.setAttribute(\"height\", document.body.scrollHeight);\n      svg.setAttributeNS(\n        \"http://www.w3.org/2000/xmlns/\",\n        \"xmlns:xlink\",\n        \"http://www.w3.org/1999/xlink\"\n      );\n      document.body.appendChild(svg);\n    }\n    return svg;\n  };\n\n  drawCurvedLine = (x1, y1, x2, y2, color, tension) => {\n    let svg = this.createSVG();\n    let shape = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    let delta = (x2 - x1) * tension;\n    let hx1 = x1 + delta;\n    let hy1 = y1;\n    let hx2 = x2 - delta;\n    let hy2 = y2;\n    let path =\n      \"M \" +\n      x1 +\n      \" \" +\n      y1 +\n      \" C \" +\n      hx1 +\n      \" \" +\n      hy1 +\n      \" \" +\n      hx2 +\n      \" \" +\n      hy2 +\n      \" \" +\n      x2 +\n      \" \" +\n      y2;\n    shape.setAttributeNS(null, \"d\", path);\n    shape.setAttributeNS(null, \"fill\", \"none\");\n    shape.setAttributeNS(null, \"stroke\", color);\n    svg.appendChild(shape);\n  };\n\n  drawLines = () => {\n    const { roadmap } = this.props;\n    Object.values(roadmap).map(e => {\n      this.drawLine(\n        document.querySelector(`#${e.id}`).getBoundingClientRect(),\n        document.querySelector(`#${e.epics[0].id}`).getBoundingClientRect(),\n        completedColor\n      );\n\n      return e.epics.map((epic, i) => {\n        const color =\n          epic.fields[\"dev status\"] === \"done\" ||\n          epic.fields[\"dev status\"] === \"underway\"\n            ? completedColor\n            : saffronBrandColor;\n        return i < e.epics.length - 1\n          ? this.drawLine(\n              document.querySelector(`#${epic.id}`).getBoundingClientRect(),\n              document\n                .querySelector(`#${e.epics[i + 1].id}`)\n                .getBoundingClientRect(),\n              color\n            )\n          : \"\";\n      });\n    });\n    return this.setState({ linesDrawn: true });\n  };\n\n  drawLine = (p1, p2, color) => {\n    // console.log(\"p1:\");\n    // console.log(p1);\n    // console.log(\"p2:\");\n    // console.log(p2);\n    this.drawCurvedLine(\n      p1.x + p1.width / 2,\n      p1.y + p1.height,\n      p2.x + p2.width / 2,\n      p2.y,\n      color,\n      0.0\n    );\n  };\n\n  addHoverEpic = (epic, x, y) => {\n    this.setState({ hoverEpic: epic, x, y }, () => {\n      // console.log(this.state);\n    });\n  };\n\n  removeHoverEpic = epic => {\n    this.setState({ hoverEpic: false, x: false, y: false });\n  };\n\n  drawEpics = epics => {\n    return epics.map((epic, i) => {\n      const status = epic.fields[\"dev status\"];\n      let style =\n        status === \"done\"\n          ? {\n              border: `1px solid ${completedColor}`\n            }\n          : status === \"underway\"\n          ? { border: `1px dotted ${completedColor}` }\n          : { border: \"1px solid #FB628B\" };\n\n      return (\n        <Epic\n          key={i}\n          style={style}\n          id={epic.id}\n          onMouseEnter={e => {\n            this.addHoverEpic(epic, e.pageX, e.pageY);\n          }}\n          onMouseLeave={() => {\n            this.removeHoverEpic(epic);\n          }}\n        >\n          {epic.fields.priority} - {epic.fields.epic}\n        </Epic>\n      );\n    });\n  };\n\n  drawThemes = roadmap => {\n    return Object.values(roadmap).map((theme, i) => {\n      return (\n        <Theme key={i}>\n          <ThemeTitle id={theme.id}>\n            {theme.theme}\n            {/* - {theme.epics.length} */}\n          </ThemeTitle>\n          {this.drawEpics(theme.epics)}\n        </Theme>\n      );\n    });\n  };\n\n  drawHoverEpic = () => {\n    const { hoverEpic, x, y } = this.state;\n    const mouseStyle = { left: `${x + 50}px`, top: `${y - 150}px` };\n    const f = hoverEpic.fields;\n    const propRelease = !!f[\"proposed release\"]\n      ? new Date(Date.parse(f[\"proposed release\"]))\n      : \"\";\n    const months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ];\n\n    return (\n      <HoverEpic style={mouseStyle}>\n        <HoverEpicTitle>{f.epic}</HoverEpicTitle>\n        <HoverEpicField>\n          proposed release:{\" \"}\n          {!!propRelease &&\n            `${propRelease.getDate()} ${\n              months[propRelease.getMonth()]\n            } ${propRelease.getFullYear()}`}\n        </HoverEpicField>\n        <HoverEpicField>design status: {f[\"design status\"]}</HoverEpicField>\n        <HoverEpicField>dev status: {f[\"dev status\"]}</HoverEpicField>\n      </HoverEpic>\n    );\n  };\n\n  render() {\n    const { roadmap } = this.props;\n    const { hoverEpic } = this.state;\n    return (\n      <RoadmapCont id=\"roadmapcont\">\n        {!!hoverEpic && this.drawHoverEpic()}\n        {this.drawThemes(roadmap)}\n      </RoadmapCont>\n    );\n  }\n}\n\nexport default Roadmap;\n","import React from \"react\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from \"./airtable/actions/actions.js\";\nimport styled from \"styled-components\";\nimport Roadmap from \"./components/Roadmap/Roadmap\";\n\nconst AppCont = styled.div`\n  min-height: 100vh;\n  font-family: \"Fira Code\", monospace;\n`;\n\nconst Title = styled.h1`\n  font-family: \"Neue Haas Grotesk Display Pro\", sans-serif;\n  font-weight: 900;\n  font-size: 42px;\n  margin: 0 auto;\n  padding: 20px;\n  text-align: center;\n`;\n\nconst Generator = styled.button`\n  font-family: inherit;\n  margin: 18px;\n  width: 90px;\n  padding: 8px;\n  font-size: 12px;\n  color: inherit;\n  background-color: transparent;\n  border: 1px solid #f05e2f;\n`;\n\nconst Loader = styled.button`\n  font-family: inherit;\n  margin: 18px;\n  width: 90px;\n  padding: 8px;\n  font-size: 12px;\n  color: inherit;\n  background-color: transparent;\n  border: none;\n`;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  roadmapBtnClick() {\n    const { fetchRoadmap } = this.props;\n    fetchRoadmap();\n  }\n\n  render() {\n    const { roadmap, isLoading } = this.props;\n    // console.log(`is loading: ${isLoading}\\nroadmap: `);\n    // !!roadmap && console.log(roadmap);\n\n    return (\n      <AppCont>\n        <Title>solo roadmap airtable</Title>\n        {!isLoading ? (\n          <Generator\n            onClick={() => {\n              this.roadmapBtnClick();\n            }}\n          >\n            Make\n          </Generator>\n        ) : (\n          <Loader>loading</Loader>\n        )}\n        <Roadmap roadmap={roadmap} />\n      </AppCont>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\n\nconst mapStateToProps = state => ({\n  roadmap: state.airtable.roadmap,\n  isLoading: state.airtable.isLoading\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport AppBase from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst { store } = configureStore();\nconst App = (\n  <Provider store={store}>\n    <AppBase />\n  </Provider>\n);\n\nReactDOM.render(App, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}